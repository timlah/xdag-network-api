worker_processes 1;
worker_rlimit_nofile 2048;

events { 
  worker_connections 1024; 
}

http {
  limit_conn_zone $binary_remote_addr zone=addr:10m;

  upstream web {
    least_conn;
    server web_1:8080 weight=10 max_fails=3 fail_timeout=30s;
    server web_2:8080 weight=10 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80;
    listen [::]:80;
    server_name api.xdag.io;

    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/html;
    }

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.xdag.io;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/api.xdag.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.xdag.io/privkey.pem;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    location / {
      limit_conn addr 10;
      add_header 'Access-Control-Allow-Origin' 'xdag.io';

      proxy_pass http://web;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
      # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      # enable strict transport security only if you understand the implications
    }

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
  }
}
