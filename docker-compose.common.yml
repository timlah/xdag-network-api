version: '2'

services:
  reverse_proxy:
    build:
      context: ./reverse-proxy
    image: networkapi/nginx
    networks:
      - webnet
    depends_on:
      - web_1
      - web_2
    restart: unless-stopped

  web_1:
    build:
      context: ./web
    image: networkapi/node_web
    env_file:
      - ./.env
    networks:
      - dbnet
      - webnet
    depends_on:
      - database
    restart: unless-stopped
    expose:
      - '${WEB_PORT}'

  web_2:
    build:
      context: ./web
    image: networkapi/node_web
    env_file:
      - ./.env
    networks:
      - dbnet
      - webnet
    depends_on:
      - database
    restart: unless-stopped
    expose:
      - '${WEB_PORT}'

  worker:
    build:
      context: ./worker
    image: networkapi/node_worker
    env_file:
      - ./.env
    networks:
      - dbnet
      - webnet
    depends_on:
      - database
    restart: unless-stopped

  database:
    image: postgres:11-alpine
    env_file:
      - ./.env
    volumes:
      - networkapi_database:/var/lib/postgresql/data
    networks:
      - dbnet
    restart: unless-stopped
    expose:
      - '${POSTGRES_PORT}'

  database_migrate:
    image: boxfuse/flyway:5.2-alpine
    env_file:
      - ./.env
    command: -url=jdbc:postgresql://database/ -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=60 migrate
    volumes:
      - ./database/migrations:/flyway/sql
    depends_on:
      - database
    networks:
      - dbnet

  cache:
    image: redis:5.0.3-alpine
    networks:
      - dbnet
    restart: unless-stopped
    expose:
      - '${REDIS_PORT}'

volumes:
  networkapi_database:
    external: true

networks:
  dbnet:
    driver: bridge
  webnet:
    driver: bridge
